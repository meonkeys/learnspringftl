<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <context:component-scan base-package="org.springapp" />
    <mvc:annotation-driven />

    <!-- Using ReloadableResourceBundleMessageSource so changes can be seen
         immediately during development. Note that it parses "basenames"
         differently, see Javadoc for the class. -->
    <!-- UPDATE (10/1/10): changed it back to ResourceBundleMessageSource so
         the messages can be accessed from inside Java files as well. Otherwise, will
         need to add WEB-INF/i18n/ to JRE classpath so we can read messages in Java. This
         is done to create hash maps and store within ModelAndView object which is then passed
         onto the view. Of course, this means the properties file is used by both the ftl (view)
         and the java (controllers).
         -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>org.springapp.i18n.messages</value>
            </list>
        </property>
    </bean>

    <bean id="freemarkerConfig"
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPaths">
            <list>
                <value>/WEB-INF/templates</value>
            </list>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape" />
            </map>
        </property>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="false" />
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl" />
        <!-- if you want to use the Spring FreeMarker macros, set this property to true -->
        <property name="exposeSpringMacroHelpers" value="true"/> 
    </bean>
</beans>
